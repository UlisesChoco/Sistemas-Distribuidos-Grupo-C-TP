
services:
  db:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      # Esto fue por testing, si se requiere usar un usuario personalizado de SQL se descomentan estas lineas 
      # MYSQL_USER: ${MYSQL_DB_USERNAME}
      # MYSQL_PASSWORD: ${MYSQL_DB_PASSWORD}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 10

  grpc-server:
    build: "./grpc server"
    container_name: grpc_server
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_MAIL_HOST: ${SPRING_MAIL_HOST}
      SPRING_MAIL_PORT: ${SPRING_MAIL_PORT}
      SPRING_SECURITY_JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
    ports:
      - "9090:9090"

  grpc-client:
    build: "./grpc client"
    container_name: api_gateway
    depends_on:
      - grpc-server
    ports:
      - "8080:9091"   # mapea el puerto host 8080 -> contenedor 9091
    volumes:
      - ./front:/app/front   # montar front
    environment:
      INVENTORY_SERVICE_ADDR: grpc-server:9090
      USER_SERVICE_ADDR: grpc-server:9090
      EVENT_SERVICE_ADDR: grpc-server:9090

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI

volumes:
  mysql_data:
